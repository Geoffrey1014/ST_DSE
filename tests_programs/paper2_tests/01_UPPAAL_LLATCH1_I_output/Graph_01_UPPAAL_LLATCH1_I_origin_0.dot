digraph G {
  ranksep=.25;
  edge [arrowsize=.5]
  node [shape=rectangle, fontname="ArialNarrow",
        fontsize=12,  height=1.2];
  "Read
           Read :  EMPTY_STATEMENT
            L27 :  LOAD = read()
            L28 :  IN_1 = read()
            L29 :  RESET = read()
            L30 :  TLOAD = read()
"; "Body
           Body :  EMPTY_STATEMENT
             L7 :  #_t0 = NOT PREV_LOAD
             L8 :  #_t1 = #_t0 AND TLOAD
             L9 :  IS_LEAD_EDGE = #_t1
         CJ_L11 :  if RESET goto IF_L10
"; "Init
           Init :  EMPTY_STATEMENT
             L0 :  IS_LEAD_EDGE = false
             L1 :  PREV_LOAD = false
             L2 :  TLOAD = false
             L3 :  RESET = false
             L4 :  LOAD = false
             L5 :  IN_1 = false
             L6 :  OUT_1 = false
"; "IF_L10
         IF_L10 :  EMPTY_STATEMENT
            L14 :  #_t2 = true
            L15 :  OUT_1 = #_t2
        UCJ_L16 :  goto END_IF_L10
"; "ELSIF_L17
      ELSIF_L17 :  EMPTY_STATEMENT
            L21 :  OUT_1 = IN_1
        UCJ_L22 :  goto END_IF_L10
"; "Entry
          Entry :  EMPTY_STATEMENT
"; "End
            End :  EMPTY_STATEMENT
            L24 :  print(OUT_1,)
            L25 :  print(PREV_LOAD,)
            L26 :  print(IS_LEAD_EDGE,)
"; "Exit
           Exit :  EMPTY_STATEMENT
"; "Main
           Main :  EMPTY_STATEMENT
"; "START_ELSIF_L12
START_ELSIF_L12 :  EMPTY_STATEMENT
            L18 :  #_t3 = LOAD OR IS_LEAD_EDGE
         CJ_L19 :  if #_t3 goto ELSIF_L17
"; "END_IF_L10
     END_IF_L10 :  EMPTY_STATEMENT
            L23 :  PREV_LOAD = TLOAD
"; 
  "Main
           Main :  EMPTY_STATEMENT
" -> "Init
           Init :  EMPTY_STATEMENT
             L0 :  IS_LEAD_EDGE = false
             L1 :  PREV_LOAD = false
             L2 :  TLOAD = false
             L3 :  RESET = false
             L4 :  LOAD = false
             L5 :  IN_1 = false
             L6 :  OUT_1 = false
"  [label="default"];
  "Init
           Init :  EMPTY_STATEMENT
             L0 :  IS_LEAD_EDGE = false
             L1 :  PREV_LOAD = false
             L2 :  TLOAD = false
             L3 :  RESET = false
             L4 :  LOAD = false
             L5 :  IN_1 = false
             L6 :  OUT_1 = false
" -> "Read
           Read :  EMPTY_STATEMENT
            L27 :  LOAD = read()
            L28 :  IN_1 = read()
            L29 :  RESET = read()
            L30 :  TLOAD = read()
"  [label="default"];
  "Body
           Body :  EMPTY_STATEMENT
             L7 :  #_t0 = NOT PREV_LOAD
             L8 :  #_t1 = #_t0 AND TLOAD
             L9 :  IS_LEAD_EDGE = #_t1
         CJ_L11 :  if RESET goto IF_L10
" -> "START_ELSIF_L12
START_ELSIF_L12 :  EMPTY_STATEMENT
            L18 :  #_t3 = LOAD OR IS_LEAD_EDGE
         CJ_L19 :  if #_t3 goto ELSIF_L17
"  [label="default"];
  "Body
           Body :  EMPTY_STATEMENT
             L7 :  #_t0 = NOT PREV_LOAD
             L8 :  #_t1 = #_t0 AND TLOAD
             L9 :  IS_LEAD_EDGE = #_t1
         CJ_L11 :  if RESET goto IF_L10
" -> "IF_L10
         IF_L10 :  EMPTY_STATEMENT
            L14 :  #_t2 = true
            L15 :  OUT_1 = #_t2
        UCJ_L16 :  goto END_IF_L10
"  [label="alter"];
  "IF_L10
         IF_L10 :  EMPTY_STATEMENT
            L14 :  #_t2 = true
            L15 :  OUT_1 = #_t2
        UCJ_L16 :  goto END_IF_L10
" -> "END_IF_L10
     END_IF_L10 :  EMPTY_STATEMENT
            L23 :  PREV_LOAD = TLOAD
"  [label="alter"];
  "START_ELSIF_L12
START_ELSIF_L12 :  EMPTY_STATEMENT
            L18 :  #_t3 = LOAD OR IS_LEAD_EDGE
         CJ_L19 :  if #_t3 goto ELSIF_L17
" -> "END_IF_L10
     END_IF_L10 :  EMPTY_STATEMENT
            L23 :  PREV_LOAD = TLOAD
"  [label="default"];
  "START_ELSIF_L12
START_ELSIF_L12 :  EMPTY_STATEMENT
            L18 :  #_t3 = LOAD OR IS_LEAD_EDGE
         CJ_L19 :  if #_t3 goto ELSIF_L17
" -> "ELSIF_L17
      ELSIF_L17 :  EMPTY_STATEMENT
            L21 :  OUT_1 = IN_1
        UCJ_L22 :  goto END_IF_L10
"  [label="alter"];
  "ELSIF_L17
      ELSIF_L17 :  EMPTY_STATEMENT
            L21 :  OUT_1 = IN_1
        UCJ_L22 :  goto END_IF_L10
" -> "END_IF_L10
     END_IF_L10 :  EMPTY_STATEMENT
            L23 :  PREV_LOAD = TLOAD
"  [label="alter"];
  "END_IF_L10
     END_IF_L10 :  EMPTY_STATEMENT
            L23 :  PREV_LOAD = TLOAD
" -> "End
            End :  EMPTY_STATEMENT
            L24 :  print(OUT_1,)
            L25 :  print(PREV_LOAD,)
            L26 :  print(IS_LEAD_EDGE,)
"  [label="default"];
  "Entry
          Entry :  EMPTY_STATEMENT
" -> "Main
           Main :  EMPTY_STATEMENT
"  [label="default"];
  "End
            End :  EMPTY_STATEMENT
            L24 :  print(OUT_1,)
            L25 :  print(PREV_LOAD,)
            L26 :  print(IS_LEAD_EDGE,)
" -> "Read
           Read :  EMPTY_STATEMENT
            L27 :  LOAD = read()
            L28 :  IN_1 = read()
            L29 :  RESET = read()
            L30 :  TLOAD = read()
"  [label="default"];
  "End
            End :  EMPTY_STATEMENT
            L24 :  print(OUT_1,)
            L25 :  print(PREV_LOAD,)
            L26 :  print(IS_LEAD_EDGE,)
" -> "Exit
           Exit :  EMPTY_STATEMENT
"  [label="alter"];
  "Read
           Read :  EMPTY_STATEMENT
            L27 :  LOAD = read()
            L28 :  IN_1 = read()
            L29 :  RESET = read()
            L30 :  TLOAD = read()
" -> "Body
           Body :  EMPTY_STATEMENT
             L7 :  #_t0 = NOT PREV_LOAD
             L8 :  #_t1 = #_t0 AND TLOAD
             L9 :  IS_LEAD_EDGE = #_t1
         CJ_L11 :  if RESET goto IF_L10
"  [label="default"];
}
