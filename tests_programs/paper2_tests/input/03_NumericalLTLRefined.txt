
PROGRAM NumericalLTLRefined


   (* Variable definition *)
   VAR_INPUT
      req1	: BOOL;
      req2	: BOOL;
   END_VAR
   VAR_OUTPUT
      grant_1	: BOOL;
      grant_2	: BOOL;
   END_VAR
   VAR
   (* The total number of states equals to 4 *)
      cstate94	: INT := 0;
   END_VAR

   (* Control logic *)
IF cstate94 = 0 THEN
    IF ((NOT req1) AND  (req2)) THEN 
        cstate94 := 1;
        grant_1 := FALSE;
        grant_2 := FALSE;
    ELSIF ((req1) AND  (req2)) THEN 
        cstate94 := 2;
        grant_1 := FALSE;
        grant_2 := FALSE;
    ELSIF ((req1) AND  (NOT req2)) THEN 
        cstate94 := 3;
        grant_1 := FALSE;
        grant_2 := FALSE;
    ELSIF ((NOT req1) AND  (NOT req2)) THEN 
        cstate94 := 0;
        grant_1 := FALSE;
        grant_2 := FALSE;
    END_IF;
ELSIF cstate94 = 1 THEN
    IF ((req1) AND  (req2)) THEN 
        cstate94 := 2;
        grant_1 := FALSE;
        grant_2 := FALSE;
    ELSIF ((req1) AND  (NOT req2)) THEN 
        cstate94 := 3;
        grant_1 := FALSE;
        grant_2 := TRUE;
    ELSIF ((NOT req1) AND  (NOT req2)) THEN 
        cstate94 := 0;
        grant_1 := FALSE;
        grant_2 := TRUE;
    ELSIF ((NOT req1) AND  (req2)) THEN 
        cstate94 := 1;
        grant_1 := FALSE;
        grant_2 := TRUE;
    END_IF;
ELSIF cstate94 = 2 THEN
    IF ((NOT req1)) OR ((req1) AND  (NOT req2)) THEN 
        cstate94 := 2;
        grant_1 := FALSE;
        grant_2 := FALSE;
    ELSIF ((req1) AND  (req2)) THEN 
        cstate94 := 2;
        grant_1 := FALSE;
        grant_2 := FALSE;
    END_IF;
ELSIF cstate94 = 3 THEN
    IF ((NOT req1) AND  (NOT req2)) THEN 
        cstate94 := 0;
        grant_1 := TRUE;
        grant_2 := FALSE;
    ELSIF ((req1) AND  (NOT req2)) THEN 
        cstate94 := 3;
        grant_1 := TRUE;
        grant_2 := FALSE;
    ELSIF ((NOT req1) AND  (req2)) THEN 
        cstate94 := 1;
        grant_1 := TRUE;
        grant_2 := FALSE;
    ELSIF ((req1) AND  (req2)) THEN 
        cstate94 := 2;
        grant_1 := FALSE;
        grant_2 := FALSE;
    END_IF;
END_IF;

END_PROGRAM


