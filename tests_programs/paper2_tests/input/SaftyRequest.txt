PROGRAM SaftyRequest


(* Variable definition *)
   VAR_INPUT
      s_1	: BOOL;
      s_2	: BOOL;
      s_3	: BOOL;
   END_VAR

   VAR_OUTPUT
      out_1	: BOOL;
      out_3	: BOOL;
      error_1	: BOOL;
   END_VAR
   VAR
      cstate	: INT := 0;
   END_VAR


   (* Control logic *)
IF cstate = 0 THEN
    IF ((NOT s_1) AND  (NOT s_2)) THEN
        cstate := 5;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((s_1) AND  (s_2)) THEN
        cstate := 6;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := TRUE;
    ELSIF ((NOT s_1) AND  (s_2) AND  (s_3)) OR ((s_1) AND  (NOT s_2) AND  (s_3)) THEN
        cstate := 3;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((NOT s_1) AND  (s_2) AND  (NOT s_3)) OR ((s_1) AND  (NOT s_2) AND  (NOT s_3)) THEN
        cstate := 3;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := TRUE;
    END_IF;
ELSIF cstate = 1 THEN
    IF ((NOT s_1) AND  (s_2) AND  (NOT s_3)) THEN
        cstate := 2;
        out_1 := FALSE;
        out_3 := TRUE;
        error_1 := FALSE;
    ELSIF ((s_1) AND  (s_2) ) THEN
        cstate := 6;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := TRUE;
    ELSIF ((s_1) AND  (NOT s_2) AND  (NOT s_3)) THEN
        cstate := 4;
        out_1 := TRUE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((NOT s_1) AND  (NOT s_2)) OR ((NOT s_1) AND  (s_2) AND  (s_3)) OR ((s_1) AND  (NOT s_2) AND  (s_3)) THEN
        cstate := 1;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := FALSE;
    END_IF;
ELSIF cstate = 2 THEN
    IF ((s_1) AND  (NOT s_2) AND  (NOT s_3)) THEN
        cstate := 4;
        out_1 := TRUE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((NOT s_1) AND  (s_3)) OR ((s_1) AND  (NOT s_2) AND  (s_3)) THEN
        cstate := 1;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((NOT s_1) AND  (NOT s_3)) THEN
        cstate := 2;
        out_1 := FALSE;
        out_3 := TRUE;
        error_1 := FALSE;
    ELSIF ((s_1) AND  (s_2)) THEN
        cstate := 6;
        out_1 := FALSE;
        out_3 := FALSE;
         error_1 := TRUE;
    END_IF;
ELSIF cstate = 3 THEN
    IF ((NOT s_1) AND  (s_2) AND  (s_3)) OR ((s_1) AND  (NOT s_2) AND  (s_3)) THEN
        cstate := 3;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((NOT s_1) AND  (s_2) AND  (NOT s_3)) OR ((s_1) AND  (NOT s_2) AND  (NOT s_3)) THEN
        cstate := 3;
         out_1 := FALSE;
         out_3 := FALSE;
         error_1 := TRUE;
    ELSIF ((NOT s_1) AND  (NOT s_2) ) THEN
        cstate := 1;
        out_1 := FALSE;
        out_3 := FALSE;
         error_1 := FALSE;
    END_IF;
ELSIF cstate = 4 THEN
    IF ((NOT s_1) AND  (s_2) AND  (NOT s_3)) THEN
        cstate := 2;
        out_1 := FALSE;
        out_3 := TRUE;
        error_1 := FALSE;
    ELSIF ((NOT s_1) AND  (s_3)) OR ((s_1) AND  (NOT s_2) AND  (s_3)) THEN
        cstate := 1;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((NOT s_2) AND  (NOT s_3)) THEN
        cstate := 4;
        out_1 := TRUE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((s_1) AND  (s_2)) THEN
        cstate := 6;
         out_1 := FALSE;
         out_3 := FALSE;
         error_1 := TRUE;
    END_IF;
ELSIF cstate = 5 THEN
    IF ((NOT s_1) AND  (s_2) AND  (NOT s_3)) THEN
        cstate := 2;
        out_1 := FALSE;
        out_3 := TRUE;
        error_1 := FALSE;
    ELSIF ((NOT s_1) AND  (s_2) AND  (s_3)) OR ((s_1) AND  (NOT s_2) AND  (s_3)) THEN
        cstate := 1;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((s_1) AND  (NOT s_2) AND  (NOT s_3)) THEN
        cstate := 4;
        out_1 := TRUE;
        out_3 := FALSE;
        error_1 := FALSE;
    ELSIF ((s_1) AND  (s_2)) THEN
        cstate := 6;
        out_1 := FALSE;
        out_3 := FALSE;
        error_1 := TRUE;
    END_IF;
END_IF;

END_PROGRAM


