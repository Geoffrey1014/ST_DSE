PROGRAM FB_G4LTL6
(* Variable definition *)
   VAR_INPUT
      x_1	: BOOL;
   END_VAR
   VAR_OUTPUT
      y_1	: BOOL;
   END_VAR
   VAR
   (* The total number of states equals to 7 *)
      cstate77	: INT := 0;
      t_reset	: BOOL;
      t_up	: BOOL;
      t_start	: BOOL;
	  count : INT := 0;
	  q : BOOL;
	  T_VALUE	: INT := 5;
   END_VAR

   (* Constant definition (depending on compiler, one might need to move to normal variables) *)

   (* Each time constant has a difference of 1 period (cycle-time); please substract it when needed  *)
   
   
(* Control logic *)
IF cstate77 = 0 THEN
    IF ((NOT  x_1 ) AND  (NOT q)) THEN 
        cstate77 := 1; y_1 := FALSE; t_start := FALSE; 
    ELSIF ((x_1)) THEN 
        cstate77 := 3; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (q)) THEN 
        cstate77 := 5; y_1 := FALSE; t_start := FALSE; 
    END_IF;
ELSIF cstate77 = 1 THEN
    IF ((NOT  x_1 ) AND  (NOT q)) THEN 
        cstate77 := 1; y_1 := FALSE; t_start := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (q)) THEN 
        cstate77 := 5; y_1 := FALSE; t_start := FALSE; 
    ELSIF ((x_1)) THEN 
        cstate77 := 3; y_1 := TRUE; t_start := FALSE; 
    END_IF;
ELSIF cstate77 = 2 THEN
    IF ((x_1) AND  (NOT q)) THEN 
        cstate77 := 2; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((x_1) AND  (q)) THEN 
        cstate77 := 3; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (NOT q)) THEN 
        cstate77 := 4; y_1 := TRUE; t_start := TRUE; t_up := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (q)) THEN 
        cstate77 := 6; y_1 := TRUE; t_start := TRUE; t_up := FALSE; 
    END_IF;
ELSIF cstate77 = 3 THEN
    IF ((NOT  x_1 ) AND  (q)) THEN 
        cstate77 := 6; y_1 := TRUE; t_start := TRUE; t_up := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (NOT q)) THEN 
        cstate77 := 4; y_1 := TRUE; t_start := TRUE; t_up := FALSE; 
    ELSIF ((x_1)) THEN 
        cstate77 := 3; y_1 := TRUE; t_start := FALSE; 
    END_IF;
ELSIF cstate77 = 4 THEN
    IF ((NOT  x_1 ) AND  (q)) THEN 
        cstate77 := 5; y_1 := FALSE; t_start := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (NOT q)) THEN 
        cstate77 := 4; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((x_1) AND  (NOT q)) THEN 
        cstate77 := 2; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((x_1) AND  (q)) THEN 
        cstate77 := 3; y_1 := TRUE; t_start := FALSE; 
    END_IF;
ELSIF cstate77 = 5 THEN
    IF ((x_1)) THEN 
        cstate77 := 3; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (NOT q)) THEN 
        cstate77 := 1; y_1 := FALSE; t_start := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (q)) THEN 
        cstate77 := 5; y_1 := FALSE; t_start := FALSE; 
    END_IF;
ELSIF cstate77 = 6 THEN
    IF ((NOT  x_1 ) AND  (q)) THEN 
        cstate77 := 5; y_1 := FALSE; t_start := FALSE; 
    ELSIF ((NOT  x_1 ) AND  (NOT q)) THEN 
        cstate77 := 4; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((x_1) AND  (NOT q)) THEN 
        cstate77 := 2; y_1 := TRUE; t_start := FALSE; 
    ELSIF ((x_1) AND  (q)) THEN 
        cstate77 := 3; y_1 := TRUE; t_start := FALSE; 
    END_IF;
END_IF;

(* Additional processing to handle clocks - in CODESYS, it only starts
    with rising edge and can not be placed inside IF statement *) 
IF(t_up) THEN
    t_reset := TRUE;
ELSIF(t_start AND NOT  t_up) THEN
    t_up := TRUE;  t_reset := FALSE;
END_IF;

IF(t_reset) THEN
	count := T_VALUE;
	IF(count=T_VALUE) THEN
		q := TRUE;
	END_IF;	
ELSE
	q := FALSE;	
	count := 0;
END_IF;

END_PROGRAM